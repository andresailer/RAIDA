#include <ROOT_AIDA/utilROOT.h>
#include <ROOT_AIDA/LeafPoint.h>
#include <TH1F.h>
#include <TDirectory.h>
#include <TFile.h>
#include <TTree.h>


#include <iostream>
#include <string>
#include <vector>

#include <AIDA/IAnalysisFactory.h>
#include <AIDA/ITreeFactory.h>
#include <AIDA/ITree.h>
#include <AIDA/IHistogramFactory.h>
#include <AIDA/IHistogram1D.h>
#include <AIDA/IHistogram2D.h>
#include <AIDA/IHistogram3D.h>
#include <AIDA/ITupleFactory.h>
#include <AIDA/ITuple.h>

using namespace AIDA ;
using namespace std;

int main()
{
  IAnalysisFactory * myaida;
  ITreeFactory * mytreefactory;
  ITree * mytree;
  IHistogramFactory * myhistofactory;
  myaida = AIDA_createAnalysisFactory();
  mytreefactory = myaida->createTreeFactory();


  std::string storeName("aidaroot.root");
  std::string storeType("root");
  bool readOnly = false;
  bool createNew = false;
  std::string options("keine");
  mytree = mytreefactory->create(storeName,storeType,readOnly,createNew,options);

  ITupleFactory * mytuplefactory = myaida->createTupleFactory(*mytree);
  myhistofactory = myaida->createHistogramFactory(*mytree);
  IHistogram1D * myhisto;
  std::string path("/ich/thomas");
  std::string title("myfirsthisto");
  int nBins = 10;
  double lowerEdge =1;
  double upperEdge = 11;
  std::string optionsx("");
  mytree->mkdir("ich");
  mytree->mkdir("du");
  mytree->mkdir("er");
  myhisto = myhistofactory->createHistogram1D(path,
                                              title,
                                              nBins,
                                              lowerEdge,
                                              upperEdge,
                                              optionsx) ;
  myhisto = myhistofactory->createHistogram1D("/x1","hi2",5,0,1);
  myhisto = myhistofactory->createHistogram1D("/du/x2","hi3",5,0,1);
  myhisto = myhistofactory->createHistogram1D("/er/x3","hi4",5,0,1);
  mytree->cd("er");
  myhisto = myhistofactory->createHistogram1D("/xx1","hii2",5,0,1);

/// Schliessen der Datei. -----------------------------------------------------
  mytree->commit();
  mytree->close();

}

