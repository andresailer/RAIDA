###################################################
#
#  RAIDA
#
#  [ Root (http://root.cern.ch)    implementation of
#    AIDA (http://aida.freehep.org)  ]  
#  
#  
###################################################

 
Introduction:
-------------

RAIDA is a ROOT implementation of AIDA (Abstract Interfaces for Data Analysis).
The motivation for the development of RAIDA was to offer the 
possibility to create and fill n-tuple or histograms using standard ROOT 
objects with AIDA. All ROOT objects created with AIDA are stored in a 
ROOT file. Since our main application of RAIDA is to create ROOT output to
be analysed using the ROOT program, the current version can not read in 
the root files created. Furthermore only objects, which exist within ROOT 
can be created. 

This version of RAIDA supports the following AIDA objects:

ITREE (create output-file, create and change directories)  
IHistogram1D, IHistogram2D, IHistogram3D (1D, 2D, and 3D binned histograms) 
ICloud1D, ICloud2D, ICloud3D (1D, 2D, and 3D unbinned histograms)
IProfile1D, IProfile2D (1D and 2D profile histogram)
IAxis (get information about axis of IHistogram, ICloud, and IProfile)
ITuple (creating and filling of n-tuples with different data types:
        int, short, long, float, double)

Additional Information:
----------------------

The AIDA histograms hold more information about the data than those from ROOT. 
RAIDA can write out these additional information by including additional 
histograms in the output file. By default the additional histograms are 
omitted. To tell RAIDA to write out these histograms, the environment variable 
"AIDA_HISTOGRAMS_IN_ROOT" has to be set to "1":

export AIDA_HISTOGRAMS_IN_ROOT=1

Debug Information:
-----------------

To supporting the usage of a debugger like GDB (DDD), the object file has to
have some additional information. By default these information is not 
written to the object file. This can be changed by setting an environment
variable:

export RAIDADEBUG=1

Verbose Mode:
------------

To get additional information written to the screen during the operation of
RAIDA, set the following environment variable:

export RAIDA_DEBUG_VERBOSE=1


Installation (with cmake):
-------------------------

 1st: edit the file BuildSetup.cmake according to your
      system setup.
 
 2nd: type the following commands:
                                                                                                                                                            
    $ mkdir build
    $ cd build
    $ cmake -C ../BuildSetup.cmake ..
    $ make install
 
 For more information on CMake for the ILCSoftware check:
 http://www-flc.desy.de/ilcsoft/ (will be available soon!)
 
 CMake's official website:
 http://www.cmake.org


Installation (old makefiles): -> Deprecated, please use cmake!
--------------------------------------------------------------

Set the environment variables that describe your root installation, e.g.:

   export ROOTSYS=/opt/products/root/5.08.00

   export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
   export PATH=$ROOTSYS/bin:$PATH

and then build the library:
   
  cd ./src
  gmake
  cd ..

this will create ./lib/libRAIDA.a


Linking against RAIDA:
---------------------

In order to build your program with RAIDA you need to use the proper 
include files and libraries, e.g. in your Makefile add:
 
  CPPFLAGS += `aida-config --include`
  LIBS += `aida-config --lib`

  LIBS += `root-config --libs`

( the first two lines should work for any AIDA installation)


and before calling 'make' set the proper environment, e.g.:

 export ROOTSYS=/opt/products/root/5.08.00

 export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
 export PATH=$ROOTSYS/bin:$PATH

 export RAIDA_HOME=/afs/desy.de/user/g/gaede/ilcsoft/RAIDA/v00-00

 . $RAIDA_HOME/bin/aida-setup.sh



